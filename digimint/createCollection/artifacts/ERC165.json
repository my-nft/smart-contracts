{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"gÃ¶rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:368:1",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:1",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "188:178:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "205:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "216:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "198:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "198:21:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "198:21:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "239:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "250:2:1",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "235:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "235:18:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "255:2:1",
														"type": "",
														"value": "28"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "228:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "228:30:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "228:30:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "278:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "289:2:1",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "274:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "274:18:1"
													},
													{
														"kind": "string",
														"nodeType": "YulLiteral",
														"src": "294:30:1",
														"type": "",
														"value": "ERC165: invalid interface id"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "267:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "267:58:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "267:58:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "334:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "346:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "357:2:1",
														"type": "",
														"value": "96"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "342:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "342:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "334:4:1"
												}
											]
										}
									]
								},
								"name": "abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "165:9:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "179:4:1",
										"type": ""
									}
								],
								"src": "14:352:1"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC165: invalid interface id\")\n        tail := add(headStart, 96)\n    }\n}",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506100216301ffc9a760e01b610026565b6100a9565b6001600160e01b031980821614156100845760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60ce806100b76000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b60576038366004606b565b6001600160e01b03191660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215607b578081fd5b81356001600160e01b0319811681146091578182fd5b939250505056fea2646970667358221220ca5e4a994b6feca8ad6e94a50764424b20e66c3c9974d28c617bd5d119a92a0764736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x26 JUMP JUMPDEST PUSH2 0xA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND EQ ISZERO PUSH2 0x84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xCE DUP1 PUSH2 0xB7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x57 PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH1 0x91 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x5E 0x4A SWAP10 0x4B PUSH16 0xECA8AD6E94A50764424B20E66C3C9974 0xD2 DUP13 PUSH2 0x7BD5 0xD1 NOT 0xA9 0x2A SMOD PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
			"sourceMap": "20663:1427:0:-:0;;;20989:209;;;;;;;;;-1:-1:-1;21151:40:0;-1:-1:-1;;;21151:18:0;:40::i;:::-;20663:1427;;21890:198;-1:-1:-1;;;;;;21973:25:0;;;;;21965:66;;;;-1:-1:-1;;;21965:66:0;;216:2:1;21965:66:0;;;198:21:1;255:2;235:18;;;228:30;294;274:18;;;267:58;342:18;;21965:66:0;;;;;;;;-1:-1:-1;;;;;;22041:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;22041:40:0;22077:4;22041:40;;;21890:198::o;188:178:1:-;20663:1427:0;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:514:1",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:1",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "83:237:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "129:26:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "138:6:1"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "146:6:1"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "131:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "131:22:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "131:22:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "104:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "113:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "100:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "100:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "125:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "96:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "96:32:1"
											},
											"nodeType": "YulIf",
											"src": "93:2:1"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "164:36:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "190:9:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "177:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "177:23:1"
											},
											"variables": [
												{
													"name": "value",
													"nodeType": "YulTypedName",
													"src": "168:5:1",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "264:26:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "273:6:1"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "281:6:1"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "266:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "266:22:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "266:22:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "222:5:1"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "233:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "244:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "249:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "240:20:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "229:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "229:32:1"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "219:2:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "219:43:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "212:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "212:51:1"
											},
											"nodeType": "YulIf",
											"src": "209:2:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "299:15:1",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "309:5:1"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "299:6:1"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bytes4",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "49:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "60:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "72:6:1",
										"type": ""
									}
								],
								"src": "14:306:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "420:92:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "430:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "442:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "453:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "438:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "438:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "430:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "472:9:1"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "497:6:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:14:1"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "483:6:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "483:22:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "465:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "465:41:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "465:41:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "389:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "400:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "411:4:1",
										"type": ""
									}
								],
								"src": "325:187:1"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b60576038366004606b565b6001600160e01b03191660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215607b578081fd5b81356001600160e01b0319811681146091578182fd5b939250505056fea2646970667358221220ca5e4a994b6feca8ad6e94a50764424b20e66c3c9974d28c617bd5d119a92a0764736f6c63430008040033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x57 PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH1 0x91 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x5E 0x4A SWAP10 0x4B PUSH16 0xECA8AD6E94A50764424B20E66C3C9974 0xD2 DUP13 PUSH2 0x7BD5 0xD1 NOT 0xA9 0x2A SMOD PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
			"sourceMap": "20663:1427:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21348:148;;;;;;:::i;:::-;-1:-1:-1;;;;;;21456:33:0;21433:4;21456:33;;;;;;;;;;;;;;21348:148;;;;490:14:1;;483:22;465:41;;453:2;438:18;21348:148:0;;;;;;;14:306:1;72:6;125:2;113:9;104:7;100:23;96:32;93:2;;;146:6;138;131:22;93:2;177:23;;-1:-1:-1;;;;;;229:32:1;;219:43;;209:2;;281:6;273;266:22;209:2;309:5;83:237;-1:-1:-1;;;83:237:1:o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "41200",
				"executionCost": "21099",
				"totalCost": "62299"
			},
			"external": {
				"supportsInterface(bytes4)": "1189"
			},
			"internal": {
				"_registerInterface(bytes4)": "infinite"
			}
		},
		"methodIdentifiers": {
			"supportsInterface(bytes4)": "01ffc9a7"
		}
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "bytes4",
					"name": "interfaceId",
					"type": "bytes4"
				}
			],
			"name": "supportsInterface",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}