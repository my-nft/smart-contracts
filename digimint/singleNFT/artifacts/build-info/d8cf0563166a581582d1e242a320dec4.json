{
	"id": "d8cf0563166a581582d1e242a320dec4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"digimint/singleNFT/wrapper.sol": {
				"content": "pragma solidity 0.6.12;\n\n// SPDX-License-Identifier: BSD-3-Clause\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n * (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint256(_at(set._inner, index)));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n  address public owner;\n\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n\n  /**\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n   * account.\n   */\n  constructor() public {\n    owner = msg.sender;\n  }\n\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner);\n    _;\n  }\n\n\n  /**\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\n   * @param newOwner The address to transfer ownership to.\n   */\n  function transferOwnership(address newOwner) onlyOwner public {\n    require(newOwner != address(0));\n    emit OwnershipTransferred(owner, newOwner);\n    owner = newOwner;\n  }\n}\n\n// Modern ERC20 Token interface\ninterface IERC20 {\n    function transfer(address to, uint amount) external returns (bool);\n    function transferFrom(address from, address to, uint amount) external returns (bool);\n}\n\n// Modern ERC721 Token interface\ninterface IERC721 {\n    function transferFrom(address from, address to, uint tokenId) external;\n    function mint(address to, string memory) external;\n    function totalSupply() external view returns(uint256);\n}\n\ncontract NFT_Market is Ownable {\n    using SafeMath for uint;\n    using EnumerableSet for EnumerableSet.UintSet;\n    uint256 public totalSales;\n    address private _trustedNftAddress;\n    uint private _maxToMint;\n    uint private _mintFee;\n    uint private _maxPerTransaction;\n\n    address public admin = 0x72DDbDc341BBFc00Fe4F3f49695532841965bF0E;\n\n    constructor (address trustedNftAddress, uint maxToMint, uint mintFee, uint maxPerTransaction) public {\n        _trustedNftAddress = trustedNftAddress;\n        _maxToMint = maxToMint;\n        _mintFee = mintFee;\n        _maxPerTransaction = maxPerTransaction;\n    }\n\n\n    function getTrustedNftAddress() public view returns (address) {\n        return _trustedNftAddress;\n    }\n\n    function getMaxToMint() public view returns (uint) {\n        return _maxToMint;\n    }\n\n    function getMintFee() public view returns (uint) {\n        return _mintFee;\n    }\n\n    function getMaxPerTransaction() public view returns (uint) {\n        return _maxPerTransaction;\n    }\n\n    function setAdmin(address _admin) public  {\n        require (msg.sender == admin || msg.sender == owner, \"Only admin or owner\");\n        admin = _admin;\n    }\n\n    function setMintNativeFee(uint mintFee) public {\n        require (msg.sender == admin || msg.sender == owner, \"Only admin or owner\");\n        _mintFee = mintFee;\n    }\n\n    function setMaxPerTransaction(uint _max) public  {\n        require (msg.sender == admin || msg.sender == owner, \"Only admin or owner\");\n\n        _maxPerTransaction = _max;\n    }\n\n\n    // =========== Start Smart Contract Setup ==============\n\n\n    uint public maxFree = 0;\n\n    // ============ End Smart Contract Setup ================\n\n\n    function totalSupply() public view returns (uint256){\n      return IERC721(getTrustedNftAddress()).totalSupply();\n    }\n\n    function canMintFree(uint256 count) public view returns (bool) {\n      uint256 totalMinted = IERC721(getTrustedNftAddress()).totalSupply();\n      return totalMinted.add(count) < maxFree;\n    }\n\n    function mint(string memory ipfsId) payable public {\n        uint256 totalMinted = IERC721(_trustedNftAddress).totalSupply();\n     //   require (count < maxPerTransaction, \"Max to mint reached\");\n        require (totalMinted.add(1) <= _maxToMint, \"Max supply reached\");\n\n        address payable _owner = address(uint160(owner));\n        require(msg.value >= _mintFee, \"Insufficient fees\");\n        _owner.transfer(msg.value);\n\n        IERC721(_trustedNftAddress).mint(msg.sender, ipfsId);\n\n    }\n\n    event ERC721Received(address operator, address from, uint256 tokenId, bytes data);\n\n    // ERC721 Interface Support Function\n    function onERC721Received(address operator, address from, uint256 tokenId, bytes memory data) public returns(bytes4) {\n        require(msg.sender == getTrustedNftAddress());\n        emit ERC721Received(operator, from, tokenId, data);\n        return this.onERC721Received.selector;\n    }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"digimint/singleNFT/wrapper.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"digimint/singleNFT/wrapper.sol\":733:7795  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"digimint/singleNFT/wrapper.sol\":733:7795  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209f74a45cd1efe03b981d1a8edd7dc7ed9550730f18763a2e7947cf5ababf8e1064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209f74a45cd1efe03b981d1a8edd7dc7ed9550730f18763a2e7947cf5ababf8e1064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 PUSH21 0xA45CD1EFE03B981D1A8EDD7DC7ED9550730F18763A 0x2E PUSH26 0x47CF5ABABF8E1064736F6C634300060C00330000000000000000 ",
							"sourceMap": "733:7062:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209f74a45cd1efe03b981d1a8edd7dc7ed9550730f18763a2e7947cf5ababf8e1064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 PUSH21 0xA45CD1EFE03B981D1A8EDD7DC7ED9550730F18763A 0x2E PUSH26 0x47CF5ABABF8E1064736F6C634300060C00330000000000000000 ",
							"sourceMap": "733:7062:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 733,
									"end": 7795,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 733,
									"end": 7795,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f74a45cd1efe03b981d1a8edd7dc7ed9550730f18763a2e7947cf5ababf8e1064736f6c634300060c0033",
									".code": [
										{
											"begin": 733,
											"end": 7795,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 733,
											"end": 7795,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 733,
											"end": 7795,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 7795,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 733,
											"end": 7795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 7795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 733,
											"end": 7795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 7795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 7795,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"digimint/singleNFT/wrapper.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"digimint/singleNFT/wrapper.sol\":{\"keccak256\":\"0x40fcc076fe3d22e1399910864505bc9e553b5c0ed0540d9f68f2ac92a34ae8f9\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://12c59d59c9cda4189960cda06353ff124aaa77ce39bb2ed5a20cbb6d70a840e4\",\"dweb:/ipfs/QmTaJcoeXvMHQgXd1zVef5K5fpicpvBUBuVtaqQJC3qiwM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"digimint/singleNFT/wrapper.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"digimint/singleNFT/wrapper.sol\":{\"keccak256\":\"0x40fcc076fe3d22e1399910864505bc9e553b5c0ed0540d9f68f2ac92a34ae8f9\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://12c59d59c9cda4189960cda06353ff124aaa77ce39bb2ed5a20cbb6d70a840e4\",\"dweb:/ipfs/QmTaJcoeXvMHQgXd1zVef5K5fpicpvBUBuVtaqQJC3qiwM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"mint(address,string)": "d0def521",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"digimint/singleNFT/wrapper.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"digimint/singleNFT/wrapper.sol\":{\"keccak256\":\"0x40fcc076fe3d22e1399910864505bc9e553b5c0ed0540d9f68f2ac92a34ae8f9\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://12c59d59c9cda4189960cda06353ff124aaa77ce39bb2ed5a20cbb6d70a840e4\",\"dweb:/ipfs/QmTaJcoeXvMHQgXd1zVef5K5fpicpvBUBuVtaqQJC3qiwM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFT_Market": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "trustedNftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maxToMint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mintFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxPerTransaction",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ERC721Received",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								}
							],
							"name": "canMintFree",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxPerTransaction",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMaxToMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMintFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedNftAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxFree",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "ipfsId",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								}
							],
							"name": "setAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_max",
									"type": "uint256"
								}
							],
							"name": "setMaxPerTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "mintFee",
									"type": "uint256"
								}
							],
							"name": "setMintNativeFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSales",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"digimint/singleNFT/wrapper.sol\":14383:17323  contract NFT_Market is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"digimint/singleNFT/wrapper.sol\":14665:14730  address public admin = 0x72DDbDc341BBFc00Fe4F3f49695532841965bF0E */\n  0x06\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"digimint/singleNFT/wrapper.sol\":14688:14730  0x72DDbDc341BBFc00Fe4F3f49695532841965bF0E */\n  0x72ddbdc341bbfc00fe4f3f49695532841965bf0e\n    /* \"digimint/singleNFT/wrapper.sol\":14665:14730  address public admin = 0x72DDbDc341BBFc00Fe4F3f49695532841965bF0E */\n  or\n  swap1\n  sstore\n  0x00\n    /* \"digimint/singleNFT/wrapper.sol\":15987:16010  uint public maxFree = 0 */\n  0x07\n  sstore\n    /* \"digimint/singleNFT/wrapper.sol\":14737:15001  constructor (address trustedNftAddress, uint maxToMint, uint mintFee, uint maxPerTransaction) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  dup4\n  add\n  mload\n  0x60\n  swap1\n  swap4\n  add\n  mload\n    /* \"digimint/singleNFT/wrapper.sol\":13410:13415  owner */\n  0x00\n    /* \"digimint/singleNFT/wrapper.sol\":13410:13428  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"digimint/singleNFT/wrapper.sol\":13418:13428  msg.sender */\n  caller\n    /* \"digimint/singleNFT/wrapper.sol\":13410:13428  owner = msg.sender */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"digimint/singleNFT/wrapper.sol\":14848:14866  _trustedNftAddress */\n  0x02\n    /* \"digimint/singleNFT/wrapper.sol\":14848:14886  _trustedNftAddress = trustedNftAddress */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap6\n  and\n  swap5\n  swap1\n  swap2\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"digimint/singleNFT/wrapper.sol\":14896:14906  _maxToMint */\n  0x03\n    /* \"digimint/singleNFT/wrapper.sol\":14896:14918  _maxToMint = maxToMint */\n  sstore\n    /* \"digimint/singleNFT/wrapper.sol\":14928:14936  _mintFee */\n  0x04\n    /* \"digimint/singleNFT/wrapper.sol\":14928:14946  _mintFee = mintFee */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"digimint/singleNFT/wrapper.sol\":14956:14974  _maxPerTransaction */\n  0x05\n    /* \"digimint/singleNFT/wrapper.sol\":14956:14994  _maxPerTransaction = maxPerTransaction */\n  sstore\n    /* \"digimint/singleNFT/wrapper.sol\":14383:17323  contract NFT_Market is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"digimint/singleNFT/wrapper.sol\":14383:17323  contract NFT_Market is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x87b8368e\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xd85d3d27\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd85d3d27\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe4ddd04a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x87b8368e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb7ed82b1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xccfdd2f8\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x485a68a3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x485a68a3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6605ff66\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x704b6c02\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7a5caab3\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x05e2b0c3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x20234ac7\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"digimint/singleNFT/wrapper.sol\":15567:15734  function setMintNativeFee(uint mintFee) public {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      calldataload\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"digimint/singleNFT/wrapper.sol\":17034:17320  function onERC721Received(address operator, address from, uint256 tokenId, bytes memory data) public returns(bytes4) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_31\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"digimint/singleNFT/wrapper.sol\":16081:16200  function totalSupply() public view returns (uint256){... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"digimint/singleNFT/wrapper.sol\":15296:15397  function getMaxPerTransaction() public view returns (uint) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_33\n      tag_37\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":15987:16010  uint public maxFree = 0 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_33\n      tag_40\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":14500:14525  uint256 public totalSales */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_33\n      tag_43\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":15403:15561  function setAdmin(address _admin) public  {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_47\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":15209:15290  function getMintFee() public view returns (uint) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_33\n      tag_50\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":15008:15112  function getTrustedNftAddress() public view returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"digimint/singleNFT/wrapper.sol\":13152:13172  address public owner */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_52\n      tag_56\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":15118:15203  function getMaxToMint() public view returns (uint) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_33\n      tag_59\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":15740:15917  function setMaxPerTransaction(uint _max) public  {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      calldataload\n      tag_63\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":16404:16899  function mint(string memory ipfsId) payable public {... */\n    tag_14:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_69\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":16206:16398  function canMintFree(uint256 count) public view returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      calldataload\n      tag_73\n      jump\t// in\n    tag_71:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"digimint/singleNFT/wrapper.sol\":13743:13917  function transferOwnership(address newOwner) onlyOwner public {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":14665:14730  address public admin = 0x72DDbDc341BBFc00Fe4F3f49695532841965bF0E */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_52\n      tag_80\n      jump\t// in\n        /* \"digimint/singleNFT/wrapper.sol\":15567:15734  function setMintNativeFee(uint mintFee) public {... */\n    tag_24:\n        /* \"digimint/singleNFT/wrapper.sol\":15647:15652  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"digimint/singleNFT/wrapper.sol\":15633:15643  msg.sender */\n      caller\n        /* \"digimint/singleNFT/wrapper.sol\":15633:15652  msg.sender == admin */\n      eq\n      dup1\n        /* \"digimint/singleNFT/wrapper.sol\":15633:15675  msg.sender == admin || msg.sender == owner */\n      tag_82\n      jumpi\n      pop\n        /* \"digimint/singleNFT/wrapper.sol\":15670:15675  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"digimint/singleNFT/wrapper.sol\":15656:15666  msg.sender */\n      caller\n        /* \"digimint/singleNFT/wrapper.sol\":15656:15675  msg.sender == owner */\n      eq\n        /* \"digimint/singleNFT/wrapper.sol\":15633:15675  msg.sender == admin || msg.sender == owner */\n    tag_82:\n        /* \"digimint/singleNFT/wrapper.sol\":15624:15699  require (msg.sender == admin || msg.sender == owner, \"Only admin or owner\") */\n      tag_83\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x69, 0x27b7363c9030b236b4b71037b91037bbb732b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_83:\n        /* \"digimint/singleNFT/wrapper.sol\":15709:15717  _mintFee */\n      0x04\n        /* \"digimint/singleNFT/wrapper.sol\":15709:15727  _mintFee = mintFee */\n      sstore\n        /* \"digimint/singleNFT/wrapper.sol\":15567:15734  function setMintNativeFee(uint mintFee) public {... */\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":17034:17320  function onERC721Received(address operator, address from, uint256 tokenId, bytes memory data) public returns(bytes4) {... */\n    tag_31:\n        /* \"digimint/singleNFT/wrapper.sol\":17143:17149  bytes4 */\n      0x00\n        /* \"digimint/singleNFT/wrapper.sol\":17183:17205  getTrustedNftAddress() */\n      tag_85\n        /* \"digimint/singleNFT/wrapper.sol\":17183:17203  getTrustedNftAddress */\n      tag_53\n        /* \"digimint/singleNFT/wrapper.sol\":17183:17205  getTrustedNftAddress() */\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":17169:17205  msg.sender == getTrustedNftAddress() */\n      and\n        /* \"digimint/singleNFT/wrapper.sol\":17169:17179  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":17169:17205  msg.sender == getTrustedNftAddress() */\n      and\n      eq\n        /* \"digimint/singleNFT/wrapper.sol\":17161:17206  require(msg.sender == getTrustedNftAddress()) */\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n        /* \"digimint/singleNFT/wrapper.sol\":17221:17266  ERC721Received(operator, from, tokenId, data) */\n      0xa05d90f300156ad1b545bc5d8197024456f21d22a708f5af04dd293e3d605251\n        /* \"digimint/singleNFT/wrapper.sol\":17236:17244  operator */\n      dup6\n        /* \"digimint/singleNFT/wrapper.sol\":17246:17250  from */\n      dup6\n        /* \"digimint/singleNFT/wrapper.sol\":17252:17259  tokenId */\n      dup6\n        /* \"digimint/singleNFT/wrapper.sol\":17261:17265  data */\n      dup6\n        /* \"digimint/singleNFT/wrapper.sol\":17221:17266  ERC721Received(operator, from, tokenId, data) */\n      mload(0x40)\n      dup1\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_87:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_89\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_87)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_90:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n      shl(0xe1, 0x0a85bd01)\n        /* \"digimint/singleNFT/wrapper.sol\":17034:17320  function onERC721Received(address operator, address from, uint256 tokenId, bytes memory data) public returns(bytes4) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":16081:16200  function totalSupply() public view returns (uint256){... */\n    tag_34:\n        /* \"digimint/singleNFT/wrapper.sol\":16125:16132  uint256 */\n      0x00\n        /* \"digimint/singleNFT/wrapper.sol\":16156:16178  getTrustedNftAddress() */\n      tag_92\n        /* \"digimint/singleNFT/wrapper.sol\":16156:16176  getTrustedNftAddress */\n      tag_53\n        /* \"digimint/singleNFT/wrapper.sol\":16156:16178  getTrustedNftAddress() */\n      jump\t// in\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":16148:16191  IERC721(getTrustedNftAddress()).totalSupply */\n      and\n      0x18160ddd\n        /* \"digimint/singleNFT/wrapper.sol\":16148:16193  IERC721(getTrustedNftAddress()).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      mload\n      swap1\n      pop\n        /* \"digimint/singleNFT/wrapper.sol\":16081:16200  function totalSupply() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":15296:15397  function getMaxPerTransaction() public view returns (uint) {... */\n    tag_37:\n        /* \"digimint/singleNFT/wrapper.sol\":15372:15390  _maxPerTransaction */\n      sload(0x05)\n        /* \"digimint/singleNFT/wrapper.sol\":15296:15397  function getMaxPerTransaction() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":15987:16010  uint public maxFree = 0 */\n    tag_40:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":14500:14525  uint256 public totalSales */\n    tag_43:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":15403:15561  function setAdmin(address _admin) public  {... */\n    tag_47:\n        /* \"digimint/singleNFT/wrapper.sol\":15478:15483  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"digimint/singleNFT/wrapper.sol\":15464:15474  msg.sender */\n      caller\n        /* \"digimint/singleNFT/wrapper.sol\":15464:15483  msg.sender == admin */\n      eq\n      dup1\n        /* \"digimint/singleNFT/wrapper.sol\":15464:15506  msg.sender == admin || msg.sender == owner */\n      tag_99\n      jumpi\n      pop\n        /* \"digimint/singleNFT/wrapper.sol\":15501:15506  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"digimint/singleNFT/wrapper.sol\":15487:15497  msg.sender */\n      caller\n        /* \"digimint/singleNFT/wrapper.sol\":15487:15506  msg.sender == owner */\n      eq\n        /* \"digimint/singleNFT/wrapper.sol\":15464:15506  msg.sender == admin || msg.sender == owner */\n    tag_99:\n        /* \"digimint/singleNFT/wrapper.sol\":15455:15530  require (msg.sender == admin || msg.sender == owner, \"Only admin or owner\") */\n      tag_100\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x69, 0x27b7363c9030b236b4b71037b91037bbb732b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_100:\n        /* \"digimint/singleNFT/wrapper.sol\":15540:15545  admin */\n      0x06\n        /* \"digimint/singleNFT/wrapper.sol\":15540:15554  admin = _admin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"digimint/singleNFT/wrapper.sol\":15403:15561  function setAdmin(address _admin) public  {... */\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":15209:15290  function getMintFee() public view returns (uint) {... */\n    tag_50:\n        /* \"digimint/singleNFT/wrapper.sol\":15275:15283  _mintFee */\n      sload(0x04)\n        /* \"digimint/singleNFT/wrapper.sol\":15209:15290  function getMintFee() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":15008:15112  function getTrustedNftAddress() public view returns (address) {... */\n    tag_53:\n        /* \"digimint/singleNFT/wrapper.sol\":15087:15105  _trustedNftAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"digimint/singleNFT/wrapper.sol\":15008:15112  function getTrustedNftAddress() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":13152:13172  address public owner */\n    tag_56:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":15118:15203  function getMaxToMint() public view returns (uint) {... */\n    tag_59:\n        /* \"digimint/singleNFT/wrapper.sol\":15186:15196  _maxToMint */\n      sload(0x03)\n        /* \"digimint/singleNFT/wrapper.sol\":15118:15203  function getMaxToMint() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":15740:15917  function setMaxPerTransaction(uint _max) public  {... */\n    tag_63:\n        /* \"digimint/singleNFT/wrapper.sol\":15822:15827  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"digimint/singleNFT/wrapper.sol\":15808:15818  msg.sender */\n      caller\n        /* \"digimint/singleNFT/wrapper.sol\":15808:15827  msg.sender == admin */\n      eq\n      dup1\n        /* \"digimint/singleNFT/wrapper.sol\":15808:15850  msg.sender == admin || msg.sender == owner */\n      tag_105\n      jumpi\n      pop\n        /* \"digimint/singleNFT/wrapper.sol\":15845:15850  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"digimint/singleNFT/wrapper.sol\":15831:15841  msg.sender */\n      caller\n        /* \"digimint/singleNFT/wrapper.sol\":15831:15850  msg.sender == owner */\n      eq\n        /* \"digimint/singleNFT/wrapper.sol\":15808:15850  msg.sender == admin || msg.sender == owner */\n    tag_105:\n        /* \"digimint/singleNFT/wrapper.sol\":15799:15874  require (msg.sender == admin || msg.sender == owner, \"Only admin or owner\") */\n      tag_106\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x69, 0x27b7363c9030b236b4b71037b91037bbb732b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_106:\n        /* \"digimint/singleNFT/wrapper.sol\":15885:15903  _maxPerTransaction */\n      0x05\n        /* \"digimint/singleNFT/wrapper.sol\":15885:15910  _maxPerTransaction = _max */\n      sstore\n        /* \"digimint/singleNFT/wrapper.sol\":15740:15917  function setMaxPerTransaction(uint _max) public  {... */\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":16404:16899  function mint(string memory ipfsId) payable public {... */\n    tag_69:\n        /* \"digimint/singleNFT/wrapper.sol\":16495:16513  _trustedNftAddress */\n      sload(0x02)\n        /* \"digimint/singleNFT/wrapper.sol\":16487:16528  IERC721(_trustedNftAddress).totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"digimint/singleNFT/wrapper.sol\":16465:16484  uint256 totalMinted */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":16495:16513  _trustedNftAddress */\n      and\n      swap2\n        /* \"digimint/singleNFT/wrapper.sol\":16487:16526  IERC721(_trustedNftAddress).totalSupply */\n      0x18160ddd\n      swap2\n        /* \"digimint/singleNFT/wrapper.sol\":16487:16528  IERC721(_trustedNftAddress).totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"digimint/singleNFT/wrapper.sol\":16495:16513  _trustedNftAddress */\n      dup7\n        /* \"digimint/singleNFT/wrapper.sol\":16487:16528  IERC721(_trustedNftAddress).totalSupply() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      mload\n        /* \"digimint/singleNFT/wrapper.sol\":16639:16649  _maxToMint */\n      sload(0x03)\n        /* \"digimint/singleNFT/wrapper.sol\":16487:16528  IERC721(_trustedNftAddress).totalSupply() */\n      swap1\n      swap2\n      pop\n        /* \"digimint/singleNFT/wrapper.sol\":16617:16635  totalMinted.add(1) */\n      tag_112\n        /* \"digimint/singleNFT/wrapper.sol\":16487:16528  IERC721(_trustedNftAddress).totalSupply() */\n      dup3\n        /* \"digimint/singleNFT/wrapper.sol\":16633:16634  1 */\n      0x01\n        /* \"digimint/singleNFT/wrapper.sol\":16617:16632  totalMinted.add */\n      tag_113\n        /* \"digimint/singleNFT/wrapper.sol\":16617:16635  totalMinted.add(1) */\n      jump\t// in\n    tag_112:\n        /* \"digimint/singleNFT/wrapper.sol\":16617:16649  totalMinted.add(1) <= _maxToMint */\n      gt\n      iszero\n        /* \"digimint/singleNFT/wrapper.sol\":16608:16672  require (totalMinted.add(1) <= _maxToMint, \"Max supply reached\") */\n      tag_114\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x13585e081cdd5c1c1b1e481c995858da1959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_114:\n        /* \"digimint/singleNFT/wrapper.sol\":16683:16705  address payable _owner */\n      0x00\n        /* \"digimint/singleNFT/wrapper.sol\":16724:16729  owner */\n      sload\n        /* \"digimint/singleNFT/wrapper.sol\":16762:16770  _mintFee */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":16724:16729  owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"digimint/singleNFT/wrapper.sol\":16749:16758  msg.value */\n      callvalue\n        /* \"digimint/singleNFT/wrapper.sol\":16749:16770  msg.value >= _mintFee */\n      lt\n      iszero\n        /* \"digimint/singleNFT/wrapper.sol\":16741:16792  require(msg.value >= _mintFee, \"Insufficient fees\") */\n      tag_115\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x78, 0x496e73756666696369656e742066656573)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_115:\n        /* \"digimint/singleNFT/wrapper.sol\":16802:16828  _owner.transfer(msg.value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":16802:16817  _owner.transfer */\n      dup3\n      and\n      swap1\n        /* \"digimint/singleNFT/wrapper.sol\":16818:16827  msg.value */\n      callvalue\n        /* \"digimint/singleNFT/wrapper.sol\":16802:16828  _owner.transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"digimint/singleNFT/wrapper.sol\":16818:16827  msg.value */\n      dup6\n        /* \"digimint/singleNFT/wrapper.sol\":16802:16817  _owner.transfer */\n      dup9\n        /* \"digimint/singleNFT/wrapper.sol\":16802:16828  _owner.transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n        /* \"digimint/singleNFT/wrapper.sol\":16847:16865  _trustedNftAddress */\n      sload(0x02)\n        /* \"digimint/singleNFT/wrapper.sol\":16839:16891  IERC721(_trustedNftAddress).mint(msg.sender, ipfsId) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xd0def521)\n      dup2\n      mstore\n        /* \"digimint/singleNFT/wrapper.sol\":16872:16882  msg.sender */\n      caller\n        /* \"digimint/singleNFT/wrapper.sol\":16839:16891  IERC721(_trustedNftAddress).mint(msg.sender, ipfsId) */\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      0x24\n      dup4\n      add\n      swap4\n      dup5\n      mstore\n      dup8\n      mload\n      0x44\n      dup5\n      add\n      mstore\n      dup8\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":16847:16865  _trustedNftAddress */\n      swap1\n      swap6\n      and\n      swap5\n        /* \"digimint/singleNFT/wrapper.sol\":16839:16871  IERC721(_trustedNftAddress).mint */\n      0xd0def521\n      swap5\n        /* \"digimint/singleNFT/wrapper.sol\":16872:16882  msg.sender */\n      swap3\n      swap4\n        /* \"digimint/singleNFT/wrapper.sol\":16884:16890  ipfsId */\n      dup10\n      swap4\n        /* \"digimint/singleNFT/wrapper.sol\":16839:16891  IERC721(_trustedNftAddress).mint(msg.sender, ipfsId) */\n      swap2\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"digimint/singleNFT/wrapper.sol\":16847:16865  _trustedNftAddress */\n      0x00\n        /* \"digimint/singleNFT/wrapper.sol\":16839:16891  IERC721(_trustedNftAddress).mint(msg.sender, ipfsId) */\n    tag_118:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_118)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_121:\n      pop\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n        /* \"digimint/singleNFT/wrapper.sol\":16404:16899  function mint(string memory ipfsId) payable public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":16206:16398  function canMintFree(uint256 count) public view returns (bool) {... */\n    tag_73:\n        /* \"digimint/singleNFT/wrapper.sol\":16263:16267  bool */\n      0x00\n        /* \"digimint/singleNFT/wrapper.sol\":16277:16296  uint256 totalMinted */\n      dup1\n        /* \"digimint/singleNFT/wrapper.sol\":16307:16329  getTrustedNftAddress() */\n      tag_126\n        /* \"digimint/singleNFT/wrapper.sol\":16307:16327  getTrustedNftAddress */\n      tag_53\n        /* \"digimint/singleNFT/wrapper.sol\":16307:16329  getTrustedNftAddress() */\n      jump\t// in\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":16299:16342  IERC721(getTrustedNftAddress()).totalSupply */\n      and\n      0x18160ddd\n        /* \"digimint/singleNFT/wrapper.sol\":16299:16344  IERC721(getTrustedNftAddress()).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      mload\n        /* \"digimint/singleNFT/wrapper.sol\":16384:16391  maxFree */\n      sload(0x07)\n        /* \"digimint/singleNFT/wrapper.sol\":16299:16344  IERC721(getTrustedNftAddress()).totalSupply() */\n      swap1\n      swap2\n      pop\n        /* \"digimint/singleNFT/wrapper.sol\":16359:16381  totalMinted.add(count) */\n      tag_131\n        /* \"digimint/singleNFT/wrapper.sol\":16299:16344  IERC721(getTrustedNftAddress()).totalSupply() */\n      dup3\n        /* \"digimint/singleNFT/wrapper.sol\":16375:16380  count */\n      dup6\n        /* \"digimint/singleNFT/wrapper.sol\":16359:16374  totalMinted.add */\n      tag_113\n        /* \"digimint/singleNFT/wrapper.sol\":16359:16381  totalMinted.add(count) */\n      jump\t// in\n    tag_131:\n        /* \"digimint/singleNFT/wrapper.sol\":16359:16391  totalMinted.add(count) < maxFree */\n      lt\n      swap4\n        /* \"digimint/singleNFT/wrapper.sol\":16206:16398  function canMintFree(uint256 count) public view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":13743:13917  function transferOwnership(address newOwner) onlyOwner public {... */\n    tag_77:\n        /* \"digimint/singleNFT/wrapper.sol\":13563:13568  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"digimint/singleNFT/wrapper.sol\":13549:13559  msg.sender */\n      caller\n        /* \"digimint/singleNFT/wrapper.sol\":13549:13568  msg.sender == owner */\n      eq\n        /* \"digimint/singleNFT/wrapper.sol\":13541:13569  require(msg.sender == owner) */\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":13819:13841  newOwner != address(0) */\n      dup2\n      and\n        /* \"digimint/singleNFT/wrapper.sol\":13811:13842  require(newOwner != address(0)) */\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n        /* \"digimint/singleNFT/wrapper.sol\":13874:13879  owner */\n      0x00\n      dup1\n      sload\n        /* \"digimint/singleNFT/wrapper.sol\":13853:13890  OwnershipTransferred(owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"digimint/singleNFT/wrapper.sol\":13874:13879  owner */\n      swap3\n      and\n      swap2\n        /* \"digimint/singleNFT/wrapper.sol\":13853:13890  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"digimint/singleNFT/wrapper.sol\":13896:13901  owner */\n      0x00\n        /* \"digimint/singleNFT/wrapper.sol\":13896:13912  owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"digimint/singleNFT/wrapper.sol\":13743:13917  function transferOwnership(address newOwner) onlyOwner public {... */\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":14665:14730  address public admin = 0x72DDbDc341BBFc00Fe4F3f49695532841965bF0E */\n    tag_80:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":8613:8789  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_113:\n        /* \"digimint/singleNFT/wrapper.sol\":8671:8678  uint256 */\n      0x00\n        /* \"digimint/singleNFT/wrapper.sol\":8702:8707  a + b */\n      dup3\n      dup3\n      add\n        /* \"digimint/singleNFT/wrapper.sol\":8725:8731  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"digimint/singleNFT/wrapper.sol\":8717:8763  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_137\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_137:\n        /* \"digimint/singleNFT/wrapper.sol\":8781:8782  c */\n      swap4\n        /* \"digimint/singleNFT/wrapper.sol\":8613:8789  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ea2712cb591245b60c5e1a87a90672c715e84f26ae315ce31a7445c851341b0b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600680546001600160a01b0319167372ddbdc341bbfc00fe4f3f49695532841965bf0e179055600060075534801561003b57600080fd5b50604051610c21380380610c218339818101604052608081101561005e57600080fd5b50805160208201516040830151606090930151600080546001600160a01b03199081163317909155600280546001600160a01b039095169490911693909317909255600355600491909155600555610b66806100bb6000396000f3fe6080604052600436106100f35760003560e01c806387b8368e1161008a578063d85d3d2711610059578063d85d3d2714610347578063e4ddd04a146103ed578063f2fde38b1461042b578063f851a4401461045e576100f3565b806387b8368e146102c25780638da5cb5b146102f3578063b7ed82b114610308578063ccfdd2f81461031d576100f3565b8063485a68a3116100c6578063485a68a3146102505780636605ff6614610265578063704b6c021461027a5780637a5caab3146102ad576100f3565b806305e2b0c3146100f8578063150b7a021461012457806318160ddd1461021457806320234ac71461023b575b600080fd5b34801561010457600080fd5b506101226004803603602081101561011b57600080fd5b5035610473565b005b34801561013057600080fd5b506101f76004803603608081101561014757600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561018257600080fd5b82018360208201111561019457600080fd5b803590602001918460018302840111640100000000831117156101b657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104e2945050505050565b604080516001600160e01b03199092168252519081900360200190f35b34801561022057600080fd5b506102296105dd565b60408051918252519081900360200190f35b34801561024757600080fd5b50610229610650565b34801561025c57600080fd5b50610229610656565b34801561027157600080fd5b5061022961065c565b34801561028657600080fd5b506101226004803603602081101561029d57600080fd5b50356001600160a01b0316610662565b3480156102b957600080fd5b506102296106ee565b3480156102ce57600080fd5b506102d76106f4565b604080516001600160a01b039092168252519081900360200190f35b3480156102ff57600080fd5b506102d7610703565b34801561031457600080fd5b50610229610712565b34801561032957600080fd5b506101226004803603602081101561034057600080fd5b5035610718565b6101226004803603602081101561035d57600080fd5b81019060208101813564010000000081111561037857600080fd5b82018360208201111561038a57600080fd5b803590602001918460018302840111640100000000831117156103ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610787945050505050565b3480156103f957600080fd5b506104176004803603602081101561041057600080fd5b50356109b4565b604080519115158252519081900360200190f35b34801561043757600080fd5b506101226004803603602081101561044e57600080fd5b50356001600160a01b0316610a3b565b34801561046a57600080fd5b506102d7610ac0565b6006546001600160a01b031633148061049657506000546001600160a01b031633145b6104dd576040805162461bcd60e51b815260206004820152601360248201527227b7363c9030b236b4b71037b91037bbb732b960691b604482015290519081900360640190fd5b600455565b60006104ec6106f4565b6001600160a01b0316336001600160a01b03161461050957600080fd5b7fa05d90f300156ad1b545bc5d8197024456f21d22a708f5af04dd293e3d6052518585858560405180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561058f578181015183820152602001610577565b50505050905090810190601f1680156105bc5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150630a85bd0160e11b949350505050565b60006105e76106f4565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561061f57600080fd5b505afa158015610633573d6000803e3d6000fd5b505050506040513d602081101561064957600080fd5b5051905090565b60055490565b60075481565b60015481565b6006546001600160a01b031633148061068557506000546001600160a01b031633145b6106cc576040805162461bcd60e51b815260206004820152601360248201527227b7363c9030b236b4b71037b91037bbb732b960691b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60045490565b6002546001600160a01b031690565b6000546001600160a01b031681565b60035490565b6006546001600160a01b031633148061073b57506000546001600160a01b031633145b610782576040805162461bcd60e51b815260206004820152601360248201527227b7363c9030b236b4b71037b91037bbb732b960691b604482015290519081900360640190fd5b600555565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b1580156107cc57600080fd5b505afa1580156107e0573d6000803e3d6000fd5b505050506040513d60208110156107f657600080fd5b5051600354909150610809826001610acf565b1115610851576040805162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b604482015290519081900360640190fd5b6000546004546001600160a01b03909116903410156108ab576040805162461bcd60e51b8152602060048201526011602482015270496e73756666696369656e74206665657360781b604482015290519081900360640190fd5b6040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156108e0573d6000803e3d6000fd5b506002546040805163d0def52160e01b81523360048201818152602483019384528751604484015287516001600160a01b039095169463d0def521949293899391606490910190602085019080838360005b8381101561094a578181015183820152602001610932565b50505050905090810190601f1680156109775780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561099757600080fd5b505af11580156109ab573d6000803e3d6000fd5b50505050505050565b6000806109bf6106f4565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109f757600080fd5b505afa158015610a0b573d6000803e3d6000fd5b505050506040513d6020811015610a2157600080fd5b5051600754909150610a338285610acf565b109392505050565b6000546001600160a01b03163314610a5257600080fd5b6001600160a01b038116610a6557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031681565b600082820183811015610b29576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fea2646970667358221220ea2712cb591245b60c5e1a87a90672c715e84f26ae315ce31a7445c851341b0b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x72DDBDC341BBFC00FE4F3F49695532841965BF0E OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC21 CODESIZE SUB DUP1 PUSH2 0xC21 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SSTORE PUSH2 0xB66 DUP1 PUSH2 0xBB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87B8368E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD85D3D27 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xE4DDD04A EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x45E JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x87B8368E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xB7ED82B1 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xCCFDD2F8 EQ PUSH2 0x31D JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x485A68A3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x485A68A3 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x6605FF66 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x2AD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5E2B0C3 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x20234AC7 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x473 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4E2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x650 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x65C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x662 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x6EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x703 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x712 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x718 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x787 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x496 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x4DD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27B7363C9030B236B4B71037B91037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xA05D90F300156AD1B545BC5D8197024456F21D22A708F5AF04DD293E3D605251 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x58F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x577 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E7 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x685 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27B7363C9030B236B4B71037B91037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x73B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x782 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27B7363C9030B236B4B71037B91037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x809 DUP3 PUSH1 0x1 PUSH2 0xACF JUMP JUMPDEST GT ISZERO PUSH2 0x851 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585E081CDD5C1C1B1E481C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E73756666696369656E742066656573 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD0DEF521 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE DUP8 MLOAD PUSH1 0x44 DUP5 ADD MSTORE DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 PUSH4 0xD0DEF521 SWAP5 SWAP3 SWAP4 DUP10 SWAP4 SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x94A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x932 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x977 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9BF PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0xA33 DUP3 DUP6 PUSH2 0xACF JUMP JUMPDEST LT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x27 SLT 0xCB MSIZE SLT GASLIMIT 0xB6 0xC 0x5E BYTE DUP8 0xA9 MOD PUSH19 0xC715E84F26AE315CE31A7445C851341B0B6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "14383:2940:0:-:0;;;14665:65;;;-1:-1:-1;;;;;;14665:65:0;14688:42;14665:65;;;;15987:23;;14737:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14737:264:0;;;;;;;;;;;;;;;13410:5;:18;;-1:-1:-1;;;;;;13410:18:0;;;13418:10;13410:18;;;;14848;:38;;-1:-1:-1;;;;;14848:38:0;;;;;;;;;;;;;;14896:10;:22;14928:8;:18;;;;14956;:38;14383:2940;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f35760003560e01c806387b8368e1161008a578063d85d3d2711610059578063d85d3d2714610347578063e4ddd04a146103ed578063f2fde38b1461042b578063f851a4401461045e576100f3565b806387b8368e146102c25780638da5cb5b146102f3578063b7ed82b114610308578063ccfdd2f81461031d576100f3565b8063485a68a3116100c6578063485a68a3146102505780636605ff6614610265578063704b6c021461027a5780637a5caab3146102ad576100f3565b806305e2b0c3146100f8578063150b7a021461012457806318160ddd1461021457806320234ac71461023b575b600080fd5b34801561010457600080fd5b506101226004803603602081101561011b57600080fd5b5035610473565b005b34801561013057600080fd5b506101f76004803603608081101561014757600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561018257600080fd5b82018360208201111561019457600080fd5b803590602001918460018302840111640100000000831117156101b657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506104e2945050505050565b604080516001600160e01b03199092168252519081900360200190f35b34801561022057600080fd5b506102296105dd565b60408051918252519081900360200190f35b34801561024757600080fd5b50610229610650565b34801561025c57600080fd5b50610229610656565b34801561027157600080fd5b5061022961065c565b34801561028657600080fd5b506101226004803603602081101561029d57600080fd5b50356001600160a01b0316610662565b3480156102b957600080fd5b506102296106ee565b3480156102ce57600080fd5b506102d76106f4565b604080516001600160a01b039092168252519081900360200190f35b3480156102ff57600080fd5b506102d7610703565b34801561031457600080fd5b50610229610712565b34801561032957600080fd5b506101226004803603602081101561034057600080fd5b5035610718565b6101226004803603602081101561035d57600080fd5b81019060208101813564010000000081111561037857600080fd5b82018360208201111561038a57600080fd5b803590602001918460018302840111640100000000831117156103ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610787945050505050565b3480156103f957600080fd5b506104176004803603602081101561041057600080fd5b50356109b4565b604080519115158252519081900360200190f35b34801561043757600080fd5b506101226004803603602081101561044e57600080fd5b50356001600160a01b0316610a3b565b34801561046a57600080fd5b506102d7610ac0565b6006546001600160a01b031633148061049657506000546001600160a01b031633145b6104dd576040805162461bcd60e51b815260206004820152601360248201527227b7363c9030b236b4b71037b91037bbb732b960691b604482015290519081900360640190fd5b600455565b60006104ec6106f4565b6001600160a01b0316336001600160a01b03161461050957600080fd5b7fa05d90f300156ad1b545bc5d8197024456f21d22a708f5af04dd293e3d6052518585858560405180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561058f578181015183820152602001610577565b50505050905090810190601f1680156105bc5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150630a85bd0160e11b949350505050565b60006105e76106f4565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561061f57600080fd5b505afa158015610633573d6000803e3d6000fd5b505050506040513d602081101561064957600080fd5b5051905090565b60055490565b60075481565b60015481565b6006546001600160a01b031633148061068557506000546001600160a01b031633145b6106cc576040805162461bcd60e51b815260206004820152601360248201527227b7363c9030b236b4b71037b91037bbb732b960691b604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60045490565b6002546001600160a01b031690565b6000546001600160a01b031681565b60035490565b6006546001600160a01b031633148061073b57506000546001600160a01b031633145b610782576040805162461bcd60e51b815260206004820152601360248201527227b7363c9030b236b4b71037b91037bbb732b960691b604482015290519081900360640190fd5b600555565b600254604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd916004808301926020929190829003018186803b1580156107cc57600080fd5b505afa1580156107e0573d6000803e3d6000fd5b505050506040513d60208110156107f657600080fd5b5051600354909150610809826001610acf565b1115610851576040805162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b604482015290519081900360640190fd5b6000546004546001600160a01b03909116903410156108ab576040805162461bcd60e51b8152602060048201526011602482015270496e73756666696369656e74206665657360781b604482015290519081900360640190fd5b6040516001600160a01b038216903480156108fc02916000818181858888f193505050501580156108e0573d6000803e3d6000fd5b506002546040805163d0def52160e01b81523360048201818152602483019384528751604484015287516001600160a01b039095169463d0def521949293899391606490910190602085019080838360005b8381101561094a578181015183820152602001610932565b50505050905090810190601f1680156109775780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561099757600080fd5b505af11580156109ab573d6000803e3d6000fd5b50505050505050565b6000806109bf6106f4565b6001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109f757600080fd5b505afa158015610a0b573d6000803e3d6000fd5b505050506040513d6020811015610a2157600080fd5b5051600754909150610a338285610acf565b109392505050565b6000546001600160a01b03163314610a5257600080fd5b6001600160a01b038116610a6557600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031681565b600082820183811015610b29576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b939250505056fea2646970667358221220ea2712cb591245b60c5e1a87a90672c715e84f26ae315ce31a7445c851341b0b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87B8368E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xD85D3D27 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xE4DDD04A EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42B JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x45E JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x87B8368E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xB7ED82B1 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xCCFDD2F8 EQ PUSH2 0x31D JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x485A68A3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x485A68A3 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x6605FF66 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x704B6C02 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x2AD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x5E2B0C3 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x20234AC7 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x473 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x4E2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x650 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x65C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x662 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x6EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0x703 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x712 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x718 JUMP JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x787 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x496 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x4DD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27B7363C9030B236B4B71037B91037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xA05D90F300156AD1B545BC5D8197024456F21D22A708F5AF04DD293E3D605251 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x58F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x577 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x5BC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E7 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x685 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x6CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27B7363C9030B236B4B71037B91037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x73B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x782 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x27B7363C9030B236B4B71037B91037BBB732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x809 DUP3 PUSH1 0x1 PUSH2 0xACF JUMP JUMPDEST GT ISZERO PUSH2 0x851 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585E081CDD5C1C1B1E481C995858DA1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE LT ISZERO PUSH2 0x8AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E73756666696369656E742066656573 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD0DEF521 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x24 DUP4 ADD SWAP4 DUP5 MSTORE DUP8 MLOAD PUSH1 0x44 DUP5 ADD MSTORE DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 PUSH4 0xD0DEF521 SWAP5 SWAP3 SWAP4 DUP10 SWAP4 SWAP2 PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x94A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x932 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x977 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9BF PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0xA33 DUP3 DUP6 PUSH2 0xACF JUMP JUMPDEST LT SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x27 SLT 0xCB MSIZE SLT GASLIMIT 0xB6 0xC 0x5E BYTE DUP8 0xA9 MOD PUSH19 0xC715E84F26AE315CE31A7445C851341B0B6473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "14383:2940:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15567:167;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15567:167:0;;:::i;:::-;;17034:286;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17034:286:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17034:286:0;;-1:-1:-1;17034:286:0;;-1:-1:-1;;;;;17034:286:0:i;:::-;;;;-1:-1:-1;;;;;;17034:286:0;;;;;;;;;;;;;;16081:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;15296:101;;;;;;;;;;;;;:::i;15987:23::-;;;;;;;;;;;;;:::i;14500:25::-;;;;;;;;;;;;;:::i;15403:158::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15403:158:0;-1:-1:-1;;;;;15403:158:0;;:::i;15209:81::-;;;;;;;;;;;;;:::i;15008:104::-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;15008:104:0;;;;;;;;;;;;;;13152:20;;;;;;;;;;;;;:::i;15118:85::-;;;;;;;;;;;;;:::i;15740:177::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15740:177:0;;:::i;16404:495::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16404:495:0;;-1:-1:-1;16404:495:0;;-1:-1:-1;;;;;16404:495:0:i;16206:192::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16206:192:0;;:::i;:::-;;;;;;;;;;;;;;;;;;13743:174;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13743:174:0;-1:-1:-1;;;;;13743:174:0;;:::i;14665:65::-;;;;;;;;;;;;;:::i;15567:167::-;15647:5;;-1:-1:-1;;;;;15647:5:0;15633:10;:19;;:42;;-1:-1:-1;15670:5:0;;-1:-1:-1;;;;;15670:5:0;15656:10;:19;15633:42;15624:75;;;;;-1:-1:-1;;;15624:75:0;;;;;;;;;;;;-1:-1:-1;;;15624:75:0;;;;;;;;;;;;;;;15709:8;:18;15567:167::o;17034:286::-;17143:6;17183:22;:20;:22::i;:::-;-1:-1:-1;;;;;17169:36:0;:10;-1:-1:-1;;;;;17169:36:0;;17161:45;;;;;;17221;17236:8;17246:4;17252:7;17261:4;17221:45;;;;-1:-1:-1;;;;;17221:45:0;;;;;;-1:-1:-1;;;;;17221:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;17034:286:0;;;;;;:::o;16081:119::-;16125:7;16156:22;:20;:22::i;:::-;-1:-1:-1;;;;;16148:43:0;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16148:45:0;;-1:-1:-1;16081:119:0;:::o;15296:101::-;15372:18;;15296:101;:::o;15987:23::-;;;;:::o;14500:25::-;;;;:::o;15403:158::-;15478:5;;-1:-1:-1;;;;;15478:5:0;15464:10;:19;;:42;;-1:-1:-1;15501:5:0;;-1:-1:-1;;;;;15501:5:0;15487:10;:19;15464:42;15455:75;;;;;-1:-1:-1;;;15455:75:0;;;;;;;;;;;;-1:-1:-1;;;15455:75:0;;;;;;;;;;;;;;;15540:5;:14;;-1:-1:-1;;;;;;15540:14:0;-1:-1:-1;;;;;15540:14:0;;;;;;;;;;15403:158::o;15209:81::-;15275:8;;15209:81;:::o;15008:104::-;15087:18;;-1:-1:-1;;;;;15087:18:0;15008:104;:::o;13152:20::-;;;-1:-1:-1;;;;;13152:20:0;;:::o;15118:85::-;15186:10;;15118:85;:::o;15740:177::-;15822:5;;-1:-1:-1;;;;;15822:5:0;15808:10;:19;;:42;;-1:-1:-1;15845:5:0;;-1:-1:-1;;;;;15845:5:0;15831:10;:19;15808:42;15799:75;;;;;-1:-1:-1;;;15799:75:0;;;;;;;;;;;;-1:-1:-1;;;15799:75:0;;;;;;;;;;;;;;;15885:18;:25;15740:177::o;16404:495::-;16495:18;;16487:41;;;-1:-1:-1;;;16487:41:0;;;;16465:19;;-1:-1:-1;;;;;16495:18:0;;16487:39;;:41;;;;;;;;;;;;;;16495:18;16487:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16487:41:0;16639:10;;16487:41;;-1:-1:-1;16617:18:0;16487:41;16633:1;16617:15;:18::i;:::-;:32;;16608:64;;;;;-1:-1:-1;;;16608:64:0;;;;;;;;;;;;-1:-1:-1;;;16608:64:0;;;;;;;;;;;;;;;16683:22;16724:5;16762:8;;-1:-1:-1;;;;;16724:5:0;;;;16749:9;:21;;16741:51;;;;;-1:-1:-1;;;16741:51:0;;;;;;;;;;;;-1:-1:-1;;;16741:51:0;;;;;;;;;;;;;;;16802:26;;-1:-1:-1;;;;;16802:15:0;;;16818:9;16802:26;;;;;;;;;16818:9;16802:15;:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16847:18:0;;16839:52;;;-1:-1:-1;;;16839:52:0;;16872:10;16839:52;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16847:18:0;;;;16839:32;;16872:10;;16884:6;;16839:52;;;;;;;;;;;;;16847:18;16839:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16404:495;;;:::o;16206:192::-;16263:4;16277:19;16307:22;:20;:22::i;:::-;-1:-1:-1;;;;;16299:43:0;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16299:45:0;16384:7;;16299:45;;-1:-1:-1;16359:22:0;16299:45;16375:5;16359:15;:22::i;:::-;:32;;16206:192;-1:-1:-1;;;16206:192:0:o;13743:174::-;13563:5;;-1:-1:-1;;;;;13563:5:0;13549:10;:19;13541:28;;;;;;-1:-1:-1;;;;;13819:22:0;::::1;13811:31;;;::::0;::::1;;13874:5;::::0;;13853:37:::1;::::0;-1:-1:-1;;;;;13853:37:0;;::::1;::::0;13874:5;::::1;::::0;13853:37:::1;::::0;::::1;13896:5;:16:::0;;-1:-1:-1;;;;;;13896:16:0::1;-1:-1:-1::0;;;;;13896:16:0;;;::::1;::::0;;;::::1;::::0;;13743:174::o;14665:65::-;;;-1:-1:-1;;;;;14665:65:0;;:::o;8613:176::-;8671:7;8702:5;;;8725:6;;;;8717:46;;;;;-1:-1:-1;;;8717:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;8781:1;8613:176;-1:-1:-1;;;8613:176:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "583600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"admin()": "1125",
								"canMintFree(uint256)": "infinite",
								"getMaxPerTransaction()": "1088",
								"getMaxToMint()": "1065",
								"getMintFee()": "1087",
								"getTrustedNftAddress()": "1060",
								"maxFree()": "1021",
								"mint(string)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "1082",
								"setAdmin(address)": "22825",
								"setMaxPerTransaction(uint256)": "21963",
								"setMintNativeFee(uint256)": "21898",
								"totalSales()": "1043",
								"totalSupply()": "infinite",
								"transferOwnership(address)": "24368"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14383,
									"end": 17323,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 14383,
									"end": 17323,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14383,
									"end": 17323,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14665,
									"end": 14730,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 14665,
									"end": 14730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14665,
									"end": 14730,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 14665,
									"end": 14730,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14688,
									"end": 14730,
									"name": "PUSH",
									"source": 0,
									"value": "72DDBDC341BBFC00FE4F3F49695532841965BF0E"
								},
								{
									"begin": 14665,
									"end": 14730,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 14665,
									"end": 14730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14665,
									"end": 14730,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14665,
									"end": 14730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15987,
									"end": 16010,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 15987,
									"end": 16010,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 14737,
									"end": 15001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13415,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13418,
									"end": 13428,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14866,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 14848,
									"end": 14886,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14896,
									"end": 14906,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 14896,
									"end": 14918,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14928,
									"end": 14936,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14928,
									"end": 14946,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14928,
									"end": 14946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14928,
									"end": 14946,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14928,
									"end": 14946,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14956,
									"end": 14974,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 14956,
									"end": 14994,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 14383,
									"end": 17323,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14383,
									"end": 17323,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14383,
									"end": 17323,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14383,
									"end": 17323,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14383,
									"end": 17323,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14383,
									"end": 17323,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14383,
									"end": 17323,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea2712cb591245b60c5e1a87a90672c715e84f26ae315ce31a7445c851341b0b64736f6c634300060c0033",
									".code": [
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "87B8368E"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "D85D3D27"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "D85D3D27"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "E4DDD04A"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "87B8368E"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "B7ED82B1"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "CCFDD2F8"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "485A68A3"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "485A68A3"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "6605FF66"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "704B6C02"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "7A5CAAB3"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "5E2B0C3"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "20234AC7"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14383,
											"end": 17323,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15647,
											"end": 15652,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15647,
											"end": 15652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15647,
											"end": 15652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15633,
											"end": 15643,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15633,
											"end": 15652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15633,
											"end": 15652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15633,
											"end": 15675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 15633,
											"end": 15675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15670,
											"end": 15675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15670,
											"end": 15675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15670,
											"end": 15675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15656,
											"end": 15666,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15656,
											"end": 15675,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15633,
											"end": 15675,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 15633,
											"end": 15675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9030B236B4B71037B91037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 15624,
											"end": 15699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15709,
											"end": 15717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15709,
											"end": 15727,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15567,
											"end": 15734,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17143,
											"end": 17149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17183,
											"end": 17205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17183,
											"end": 17205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17183,
											"end": 17205,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17183,
											"end": 17205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17169,
											"end": 17205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17169,
											"end": 17179,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17169,
											"end": 17205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17169,
											"end": 17205,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17161,
											"end": 17206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17161,
											"end": 17206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17161,
											"end": 17206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17161,
											"end": 17206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17161,
											"end": 17206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17161,
											"end": 17206,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17161,
											"end": 17206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "A05D90F300156AD1B545BC5D8197024456F21D22A708F5AF04DD293E3D605251"
										},
										{
											"begin": 17236,
											"end": 17244,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17246,
											"end": 17250,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17252,
											"end": 17259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17261,
											"end": 17265,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17221,
											"end": 17266,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17034,
											"end": 17320,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16125,
											"end": 16132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16156,
											"end": 16176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 16156,
											"end": 16178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16148,
											"end": 16191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16191,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16081,
											"end": 16200,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15390,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15372,
											"end": 15390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15296,
											"end": 15397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15987,
											"end": 16010,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14525,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15483,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15478,
											"end": 15483,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15478,
											"end": 15483,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15474,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15483,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15464,
											"end": 15506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15501,
											"end": 15506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15501,
											"end": 15506,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15501,
											"end": 15506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15497,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15487,
											"end": 15506,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15464,
											"end": 15506,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15464,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9030B236B4B71037B91037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15455,
											"end": 15530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15545,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15540,
											"end": 15554,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15403,
											"end": 15561,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15275,
											"end": 15283,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15275,
											"end": 15283,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15209,
											"end": 15290,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15087,
											"end": 15105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15008,
											"end": 15112,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15186,
											"end": 15196,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15186,
											"end": 15196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15203,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15822,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15822,
											"end": 15827,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15822,
											"end": 15827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15818,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15808,
											"end": 15850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15845,
											"end": 15850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15845,
											"end": 15850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15845,
											"end": 15850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15831,
											"end": 15841,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15831,
											"end": 15850,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15850,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15808,
											"end": 15850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C9030B236B4B71037B91037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 15799,
											"end": 15874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15885,
											"end": 15903,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15885,
											"end": 15910,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15740,
											"end": 15917,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16465,
											"end": 16484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16465,
											"end": 16484,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16526,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 16487,
											"end": 16526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16639,
											"end": 16649,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16639,
											"end": 16649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16617,
											"end": 16635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16487,
											"end": 16528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16633,
											"end": 16634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16617,
											"end": 16632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16617,
											"end": 16635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16617,
											"end": 16635,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16617,
											"end": 16635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16617,
											"end": 16649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16617,
											"end": 16649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E081CDD5C1C1B1E481C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 16608,
											"end": 16672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16683,
											"end": 16705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16724,
											"end": 16729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16762,
											"end": 16770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16762,
											"end": 16770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16724,
											"end": 16729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16724,
											"end": 16729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16724,
											"end": 16729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16724,
											"end": 16729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16749,
											"end": 16758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16749,
											"end": 16770,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16749,
											"end": 16770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742066656573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16741,
											"end": 16792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16802,
											"end": 16817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16818,
											"end": 16827,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16818,
											"end": 16827,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16817,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16802,
											"end": 16828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0DEF521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16872,
											"end": 16882,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16871,
											"name": "PUSH",
											"source": 0,
											"value": "D0DEF521"
										},
										{
											"begin": 16839,
											"end": 16871,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16872,
											"end": 16882,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16872,
											"end": 16882,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16890,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16884,
											"end": 16890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16847,
											"end": 16865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16839,
											"end": 16891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16899,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16263,
											"end": 16267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16277,
											"end": 16296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16307,
											"end": 16329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 16307,
											"end": 16329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16307,
											"end": 16329,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 16307,
											"end": 16329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16299,
											"end": 16342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16342,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16384,
											"end": 16391,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16384,
											"end": 16391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16359,
											"end": 16381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16299,
											"end": 16344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16380,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16359,
											"end": 16381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16359,
											"end": 16381,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 16359,
											"end": 16381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16391,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16359,
											"end": 16391,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16206,
											"end": 16398,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13563,
											"end": 13568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13563,
											"end": 13568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13563,
											"end": 13568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13559,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13568,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13819,
											"end": 13841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13819,
											"end": 13841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14665,
											"end": 14730,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8613,
											"end": 8789,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 8613,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8671,
											"end": 8678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8702,
											"end": 8707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8731,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8725,
											"end": 8731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8717,
											"end": 8763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8781,
											"end": 8782,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8789,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8613,
											"end": 8789,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"canMintFree(uint256)": "e4ddd04a",
							"getMaxPerTransaction()": "20234ac7",
							"getMaxToMint()": "b7ed82b1",
							"getMintFee()": "7a5caab3",
							"getTrustedNftAddress()": "87b8368e",
							"maxFree()": "485a68a3",
							"mint(string)": "d85d3d27",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"setAdmin(address)": "704b6c02",
							"setMaxPerTransaction(uint256)": "ccfdd2f8",
							"setMintNativeFee(uint256)": "05e2b0c3",
							"totalSales()": "6605ff66",
							"totalSupply()": "18160ddd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedNftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxToMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPerTransaction\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ERC721Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"canMintFree\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxPerTransaction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedNftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFree\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ipfsId\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setMaxPerTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"}],\"name\":\"setMintNativeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSales\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"digimint/singleNFT/wrapper.sol\":\"NFT_Market\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"digimint/singleNFT/wrapper.sol\":{\"keccak256\":\"0x40fcc076fe3d22e1399910864505bc9e553b5c0ed0540d9f68f2ac92a34ae8f9\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://12c59d59c9cda4189960cda06353ff124aaa77ce39bb2ed5a20cbb6d70a840e4\",\"dweb:/ipfs/QmTaJcoeXvMHQgXd1zVef5K5fpicpvBUBuVtaqQJC3qiwM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 591,
								"contract": "digimint/singleNFT/wrapper.sol:NFT_Market",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 700,
								"contract": "digimint/singleNFT/wrapper.sol:NFT_Market",
								"label": "totalSales",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 702,
								"contract": "digimint/singleNFT/wrapper.sol:NFT_Market",
								"label": "_trustedNftAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 704,
								"contract": "digimint/singleNFT/wrapper.sol:NFT_Market",
								"label": "_maxToMint",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 706,
								"contract": "digimint/singleNFT/wrapper.sol:NFT_Market",
								"label": "_mintFee",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 708,
								"contract": "digimint/singleNFT/wrapper.sol:NFT_Market",
								"label": "_maxPerTransaction",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 711,
								"contract": "digimint/singleNFT/wrapper.sol:NFT_Market",
								"label": "admin",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 843,
								"contract": "digimint/singleNFT/wrapper.sol:NFT_Market",
								"label": "maxFree",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \"user permissions\".",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"digimint/singleNFT/wrapper.sol\":13131:13919  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"digimint/singleNFT/wrapper.sol\":13383:13433  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"digimint/singleNFT/wrapper.sol\":13410:13415  owner */\n  0x00\n    /* \"digimint/singleNFT/wrapper.sol\":13410:13428  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"digimint/singleNFT/wrapper.sol\":13418:13428  msg.sender */\n  caller\n    /* \"digimint/singleNFT/wrapper.sol\":13410:13428  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"digimint/singleNFT/wrapper.sol\":13131:13919  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"digimint/singleNFT/wrapper.sol\":13131:13919  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"digimint/singleNFT/wrapper.sol\":13152:13172  address public owner */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"digimint/singleNFT/wrapper.sol\":13743:13917  function transferOwnership(address newOwner) onlyOwner public {... */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"digimint/singleNFT/wrapper.sol\":13152:13172  address public owner */\n    tag_6:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"digimint/singleNFT/wrapper.sol\":13743:13917  function transferOwnership(address newOwner) onlyOwner public {... */\n    tag_9:\n        /* \"digimint/singleNFT/wrapper.sol\":13563:13568  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"digimint/singleNFT/wrapper.sol\":13549:13559  msg.sender */\n      caller\n        /* \"digimint/singleNFT/wrapper.sol\":13549:13568  msg.sender == owner */\n      eq\n        /* \"digimint/singleNFT/wrapper.sol\":13541:13569  require(msg.sender == owner) */\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"digimint/singleNFT/wrapper.sol\":13819:13841  newOwner != address(0) */\n      dup2\n      and\n        /* \"digimint/singleNFT/wrapper.sol\":13811:13842  require(newOwner != address(0)) */\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n        /* \"digimint/singleNFT/wrapper.sol\":13874:13879  owner */\n      0x00\n      dup1\n      sload\n        /* \"digimint/singleNFT/wrapper.sol\":13853:13890  OwnershipTransferred(owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"digimint/singleNFT/wrapper.sol\":13874:13879  owner */\n      swap3\n      and\n      swap2\n        /* \"digimint/singleNFT/wrapper.sol\":13853:13890  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"digimint/singleNFT/wrapper.sol\":13896:13901  owner */\n      0x00\n        /* \"digimint/singleNFT/wrapper.sol\":13896:13912  owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"digimint/singleNFT/wrapper.sol\":13743:13917  function transferOwnership(address newOwner) onlyOwner public {... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bc50f112d75f3458d8af93296fa32f227b99967602f550ce3c66eb08c63deba964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610151806100326000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b1461005f575b600080fd5b610043610087565b604080516001600160a01b039092168252519081900360200190f35b6100856004803603602081101561007557600080fd5b50356001600160a01b0316610096565b005b6000546001600160a01b031681565b6000546001600160a01b031633146100ad57600080fd5b6001600160a01b0381166100c057600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea2646970667358221220bc50f112d75f3458d8af93296fa32f227b99967602f550ce3c66eb08c63deba964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x151 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x96 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC POP CALL SLT 0xD7 0x5F CALLVALUE PC 0xD8 0xAF SWAP4 0x29 PUSH16 0xA32F227B99967602F550CE3C66EB08C6 RETURNDATASIZE 0xEB 0xA9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "13131:788:0:-:0;;;13383:50;;;;;;;;;-1:-1:-1;13410:5:0;:18;;-1:-1:-1;;;;;;13410:18:0;13418:10;13410:18;;;13131:788;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638da5cb5b1461003b578063f2fde38b1461005f575b600080fd5b610043610087565b604080516001600160a01b039092168252519081900360200190f35b6100856004803603602081101561007557600080fd5b50356001600160a01b0316610096565b005b6000546001600160a01b031681565b6000546001600160a01b031633146100ad57600080fd5b6001600160a01b0381166100c057600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fea2646970667358221220bc50f112d75f3458d8af93296fa32f227b99967602f550ce3c66eb08c63deba964736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x96 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC POP CALL SLT 0xD7 0x5F CALLVALUE PC 0xD8 0xAF SWAP4 0x29 PUSH16 0xA32F227B99967602F550CE3C66EB08C6 RETURNDATASIZE 0xEB 0xA9 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "13131:788:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13152:20;;;:::i;:::-;;;;-1:-1:-1;;;;;13152:20:0;;;;;;;;;;;;;;13743:174;;;;;;;;;;;;;;;;-1:-1:-1;13743:174:0;-1:-1:-1;;;;;13743:174:0;;:::i;:::-;;13152:20;;;-1:-1:-1;;;;;13152:20:0;;:::o;13743:174::-;13563:5;;-1:-1:-1;;;;;13563:5:0;13549:10;:19;13541:28;;;;;;-1:-1:-1;;;;;13819:22:0;::::1;13811:31;;;::::0;::::1;;13874:5;::::0;;13853:37:::1;::::0;-1:-1:-1;;;;;13853:37:0;;::::1;::::0;13874:5;::::1;::::0;13853:37:::1;::::0;::::1;13896:5;:16:::0;;-1:-1:-1;;;;;;13896:16:0::1;-1:-1:-1::0;;;;;13896:16:0;;;::::1;::::0;;;::::1;::::0;;13743:174::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "67400",
								"executionCost": "20952",
								"totalCost": "88352"
							},
							"external": {
								"owner()": "1015",
								"transferOwnership(address)": "24302"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13131,
									"end": 13919,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 13131,
									"end": 13919,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13131,
									"end": 13919,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13383,
									"end": 13433,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13410,
									"end": 13415,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13418,
									"end": 13428,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13410,
									"end": 13428,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13131,
									"end": 13919,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13131,
									"end": 13919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13131,
									"end": 13919,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13131,
									"end": 13919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13131,
									"end": 13919,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13131,
									"end": 13919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13131,
									"end": 13919,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc50f112d75f3458d8af93296fa32f227b99967602f550ce3c66eb08c63deba964736f6c634300060c0033",
									".code": [
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13131,
											"end": 13919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13152,
											"end": 13172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13563,
											"end": 13568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13563,
											"end": 13568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13563,
											"end": 13568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13559,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13549,
											"end": 13568,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13541,
											"end": 13569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13819,
											"end": 13841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13819,
											"end": 13841,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13811,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13874,
											"end": 13879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13853,
											"end": 13890,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13896,
											"end": 13912,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13743,
											"end": 13917,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \\\"user permissions\\\".\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"digimint/singleNFT/wrapper.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"digimint/singleNFT/wrapper.sol\":{\"keccak256\":\"0x40fcc076fe3d22e1399910864505bc9e553b5c0ed0540d9f68f2ac92a34ae8f9\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://12c59d59c9cda4189960cda06353ff124aaa77ce39bb2ed5a20cbb6d70a840e4\",\"dweb:/ipfs/QmTaJcoeXvMHQgXd1zVef5K5fpicpvBUBuVtaqQJC3qiwM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 591,
								"contract": "digimint/singleNFT/wrapper.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"digimint/singleNFT/wrapper.sol\":8361:12939  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"digimint/singleNFT/wrapper.sol\":8361:12939  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205eaac825566d3040913befea591f47867f4e2428097f71473bb1cdc6d4a817f064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205eaac825566d3040913befea591f47867f4e2428097f71473bb1cdc6d4a817f064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xAA 0xC8 0x25 JUMP PUSH14 0x3040913BEFEA591F47867F4E2428 MULMOD PUSH32 0x71473BB1CDC6D4A817F064736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "8361:4578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205eaac825566d3040913befea591f47867f4e2428097f71473bb1cdc6d4a817f064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xAA 0xC8 0x25 JUMP PUSH14 0x3040913BEFEA591F47867F4E2428 MULMOD PUSH32 0x71473BB1CDC6D4A817F064736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "8361:4578:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8361,
									"end": 12939,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8361,
									"end": 12939,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205eaac825566d3040913befea591f47867f4e2428097f71473bb1cdc6d4a817f064736f6c634300060c0033",
									".code": [
										{
											"begin": 8361,
											"end": 12939,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 12939,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 12939,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 12939,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8361,
											"end": 12939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 12939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 12939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 12939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 12939,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"digimint/singleNFT/wrapper.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"digimint/singleNFT/wrapper.sol\":{\"keccak256\":\"0x40fcc076fe3d22e1399910864505bc9e553b5c0ed0540d9f68f2ac92a34ae8f9\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://12c59d59c9cda4189960cda06353ff124aaa77ce39bb2ed5a20cbb6d70a840e4\",\"dweb:/ipfs/QmTaJcoeXvMHQgXd1zVef5K5fpicpvBUBuVtaqQJC3qiwM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"digimint/singleNFT/wrapper.sol": {
				"ast": {
					"absolutePath": "digimint/singleNFT/wrapper.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							394
						],
						"IERC20": [
							668
						],
						"IERC721": [
							690
						],
						"NFT_Market": [
							982
						],
						"Ownable": [
							647
						],
						"SafeMath": [
							588
						]
					},
					"id": 983,
					"license": "BSD-3-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "67:665:0",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 10,
											"src": "1255:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 3,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 4,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "1255:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 10,
											"src": "1406:37:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 8,
												"keyType": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1406:28:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 394,
									"src": "1201:249:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1689:335:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1703:22:0",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 21,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1714:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 22,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1719:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 20,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1704:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1704:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 48,
													"nodeType": "Block",
													"src": "1981:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2002:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 19,
															"id": 47,
															"nodeType": "Return",
															"src": "1995:12:0"
														}
													]
												},
												"id": 49,
												"nodeType": "IfStatement",
												"src": "1699:319:0",
												"trueBody": {
													"id": 45,
													"nodeType": "Block",
													"src": "1727:248:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 30,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1758:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 25,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "1741:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 28,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "1741:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1741:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1741:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 32,
															"nodeType": "ExpressionStatement",
															"src": "1741:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 33,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "1899:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 36,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "1899:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 37,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 35,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1912:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1899:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 38,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "1921:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 39,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "1921:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1921:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1899:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 42,
															"nodeType": "ExpressionStatement",
															"src": "1899:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1960:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 19,
															"id": 44,
															"nodeType": "Return",
															"src": "1953:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1456:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 51,
												"src": "1634:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 12,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "1634:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 51,
												"src": "1651:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 14,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1633:32:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 51,
												"src": "1683:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1683:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:6:0"
									},
									"scope": 394,
									"src": "1620:404:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2264:1440:0",
										"statements": [
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 130,
														"src": "2374:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 61,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2374:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 63,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2395:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "2395:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 66,
													"indexExpression": {
														"argumentTypes": null,
														"id": 65,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2408:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2395:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2374:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2429:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2443:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2429:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3661:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3682:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 60,
															"id": 127,
															"nodeType": "Return",
															"src": "3675:12:0"
														}
													]
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "2425:1273:0",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "2446:1209:0",
													"statements": [
														{
															"assignments": [
																72
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 72,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 125,
																	"src": "2786:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 71,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2786:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 76,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 73,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "2810:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2823:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2810:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2786:38:0"
														},
														{
															"assignments": [
																78
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 78,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 125,
																	"src": "2838:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 77,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2838:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 84,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 79,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "2858:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "2858:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2858:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2879:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2858:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2838:42:0"
														},
														{
															"assignments": [
																86
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 86,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 125,
																	"src": "3120:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 85,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 91,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 87,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "3140:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "3140:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 90,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 89,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "3152:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3140:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3120:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 92,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "3254:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "3254:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 96,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 94,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "3266:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3254:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 97,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "3283:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3254:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "3254:38:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 100,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "3358:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "3358:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 104,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 102,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 86,
																		"src": "3371:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3358:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 105,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "3384:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3400:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3384:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3358:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 109,
															"nodeType": "ExpressionStatement",
															"src": "3358:43:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 110,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "3507:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 113,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "3507:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3507:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3507:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 116,
															"nodeType": "ExpressionStatement",
															"src": "3507:17:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3592:26:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 117,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "3599:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 118,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "3599:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 120,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 119,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "3612:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3599:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 122,
															"nodeType": "ExpressionStatement",
															"src": "3592:26:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3640:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 60,
															"id": 124,
															"nodeType": "Return",
															"src": "3633:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2030:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2209:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 53,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "2209:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 55,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2208:32:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2258:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2258:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2257:6:0"
									},
									"scope": 394,
									"src": "2192:1512:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "3864:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 141,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "3881:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "3881:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 144,
														"indexExpression": {
															"argumentTypes": null,
															"id": 143,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3894:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3881:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3904:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3881:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 140,
												"id": 147,
												"nodeType": "Return",
												"src": "3874:31:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3710:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "3804:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 133,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "3804:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "3821:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3803:32:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "3858:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3858:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3857:6:0"
									},
									"scope": 394,
									"src": "3785:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4058:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 157,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4075:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4075:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4075:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 160,
												"nodeType": "Return",
												"src": "4068:25:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "3918:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 162,
												"src": "4010:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 151,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "4010:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4009:17:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 162,
												"src": "4049:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4048:9:0"
									},
									"scope": 394,
									"src": "3993:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "4508:125:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 173,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "4526:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "4526:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4526:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 176,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4547:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4526:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4554:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4518:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "4518:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 181,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4608:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4608:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 184,
													"indexExpression": {
														"argumentTypes": null,
														"id": 183,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "4620:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4608:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 171,
												"id": 185,
												"nodeType": "Return",
												"src": "4601:25:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "4105:322:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 187,
												"src": "4445:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 164,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "4445:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 187,
												"src": "4462:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4444:32:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 187,
												"src": "4499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4498:9:0"
									},
									"scope": 394,
									"src": "4432:201:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 190,
									"members": [
										{
											"constant": false,
											"id": 189,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 190,
											"src": "4686:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 188,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 10,
												"src": "4686:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 394,
									"src": "4658:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "4949:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 201,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "4971:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 189,
															"src": "4971:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 207,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "4999:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4991:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 205,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4991:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4991:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4983:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 203,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4983:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4983:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "4966:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 199,
												"id": 211,
												"nodeType": "Return",
												"src": "4959:48:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "4709:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "4886:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 192,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "4886:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "4910:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4885:39:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "4943:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4943:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4942:6:0"
									},
									"scope": 394,
									"src": "4873:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5261:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 224,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "5286:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 189,
															"src": "5286:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "5314:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5306:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 228,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5306:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5306:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 226,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5298:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 223,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "5278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5278:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 222,
												"id": 234,
												"nodeType": "Return",
												"src": "5271:51:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "5020:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "5198:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 215,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "5198:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "5222:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5197:39:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "5255:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5254:6:0"
									},
									"scope": 394,
									"src": "5182:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "5496:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 247,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5523:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 189,
															"src": "5523:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 253,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "5551:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5543:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 251,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5543:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5543:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5535:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 249,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5535:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5535:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 246,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "5513:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5513:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 245,
												"id": 257,
												"nodeType": "Return",
												"src": "5506:53:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5335:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "5428:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 238,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "5428:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "5452:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5427:39:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "5490:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5490:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5489:6:0"
									},
									"scope": 394,
									"src": "5410:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "5719:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 268,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "5744:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 189,
															"src": "5744:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 267,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5736:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 271,
												"nodeType": "Return",
												"src": "5729:26:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5572:70:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "5663:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 261,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "5663:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5662:24:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "5710:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5709:9:0"
									},
									"scope": 394,
									"src": "5647:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "6177:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 288,
																				"name": "set",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 276,
																				"src": "6214:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																					"typeString": "struct EnumerableSet.AddressSet storage pointer"
																				}
																			},
																			"id": 289,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_inner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 189,
																			"src": "6214:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 290,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "6226:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Set_$10_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 287,
																		"name": "_at",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "6210:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6210:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6202:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 285,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6202:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6202:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6194:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 283,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6194:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6194:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 282,
												"id": 294,
												"nodeType": "Return",
												"src": "6187:47:0"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "5767:322:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "6106:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 275,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "6106:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "6130:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6105:39:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "6168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6167:9:0"
									},
									"scope": 394,
									"src": "6094:147:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 299,
									"members": [
										{
											"constant": false,
											"id": 298,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 299,
											"src": "6289:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 297,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 10,
												"src": "6289:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 394,
									"src": "6264:42:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "6549:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 310,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "6571:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 298,
															"src": "6571:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6591:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6583:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 312,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6583:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6583:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 309,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "6566:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6566:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 308,
												"id": 317,
												"nodeType": "Return",
												"src": "6559:39:0"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "6312:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "6489:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 301,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "6489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "6510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6488:36:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "6543:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6543:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6542:6:0"
									},
									"scope": 394,
									"src": "6476:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "6849:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 330,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "6874:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 298,
															"src": "6874:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 334,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "6894:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6886:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 332,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6886:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6886:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 329,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "6866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6866:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 328,
												"id": 337,
												"nodeType": "Return",
												"src": "6859:42:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "6611:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 339,
												"src": "6789:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 321,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "6789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 339,
												"src": "6810:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6788:36:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 339,
												"src": "6843:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6843:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6842:6:0"
									},
									"scope": 394,
									"src": "6773:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "7072:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 350,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "7099:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 298,
															"src": "7099:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 354,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "7119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7111:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 352,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7111:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7111:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 349,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "7089:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7089:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 348,
												"id": 357,
												"nodeType": "Return",
												"src": "7082:44:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "6914:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 359,
												"src": "7007:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 341,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "7007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 359,
												"src": "7028:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7006:36:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 359,
												"src": "7066:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7066:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7065:6:0"
									},
									"scope": 394,
									"src": "6989:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "7283:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 368,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "7308:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 298,
															"src": "7308:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 367,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "7300:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7300:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 366,
												"id": 371,
												"nodeType": "Return",
												"src": "7293:26:0"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "7139:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "7230:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 361,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "7230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7229:21:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "7274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7273:9:0"
									},
									"scope": 394,
									"src": "7214:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "7738:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 386,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "7767:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 298,
																	"src": "7767:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$10_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 388,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "7779:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$10_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 385,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "7763:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7763:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7755:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7755:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7755:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 382,
												"id": 391,
												"nodeType": "Return",
												"src": "7748:38:0"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "7331:322:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 393,
												"src": "7670:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 375,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "7670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 393,
												"src": "7691:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7669:36:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 393,
												"src": "7729:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7728:9:0"
									},
									"scope": 394,
									"src": "7658:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 983,
							"src": "733:7062:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "7797:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 588,
							"linearizedBaseContracts": [
								588
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "8680:109:0",
										"statements": [
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 420,
														"src": "8690:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 410,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "8702:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 408,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "8706:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8702:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8690:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 412,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "8725:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 413,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "8730:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8725:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8733:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8717:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8717:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "8717:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 418,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 406,
													"src": "8781:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 404,
												"id": 419,
												"nodeType": "Return",
												"src": "8774:8:0"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "8384:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "8626:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "8637:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8625:22:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 421,
												"src": "8671:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8670:9:0"
									},
									"scope": 588,
									"src": "8613:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "9127:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 432,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "9148:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 433,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "9151:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9154:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 431,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															438,
															466
														],
														"referencedDeclaration": 466,
														"src": "9144:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9144:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 430,
												"id": 436,
												"nodeType": "Return",
												"src": "9137:50:0"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "8795:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 438,
												"src": "9073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 438,
												"src": "9084:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9072:22:0"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 438,
												"src": "9118:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9117:9:0"
									},
									"scope": 588,
									"src": "9060:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "9580:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 451,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "9598:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 452,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "9603:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9598:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 454,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "9606:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9590:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "9590:29:0"
											},
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 465,
														"src": "9629:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9629:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 459,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "9641:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 460,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "9645:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9641:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9629:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 463,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 458,
													"src": "9664:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 449,
												"id": 464,
												"nodeType": "Return",
												"src": "9657:8:0"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "9200:280:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "9498:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "9509:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "9520:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9520:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9497:50:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 466,
												"src": "9571:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9570:9:0"
									},
									"scope": 588,
									"src": "9485:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "9986:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 476,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "10218:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10223:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10218:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 482,
												"nodeType": "IfStatement",
												"src": "10214:45:0",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "10226:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10247:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 475,
															"id": 480,
															"nodeType": "Return",
															"src": "10240:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 500,
														"src": "10269:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10269:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 485,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "10281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 486,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "10285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10269:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 490,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "10304:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 491,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "10308:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10304:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 493,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "10313:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10304:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10316:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10296:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10296:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "10296:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 498,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 484,
													"src": "10370:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 475,
												"id": 499,
												"nodeType": "Return",
												"src": "10363:8:0"
											}
										]
									},
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "9678:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "9932:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "9943:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9931:22:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 501,
												"src": "9977:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9976:9:0"
									},
									"scope": 588,
									"src": "9919:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "10907:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 512,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "10928:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 513,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "10931:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10934:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 511,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															518,
															546
														],
														"referencedDeclaration": 546,
														"src": "10924:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10924:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 510,
												"id": 516,
												"nodeType": "Return",
												"src": "10917:46:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "10384:451:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "10853:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "10864:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10852:22:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "10898:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10897:9:0"
									},
									"scope": 588,
									"src": "10840:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "11547:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 531,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "11565:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11569:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11565:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 534,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "11572:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11557:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11557:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "11557:28:0"
											},
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 545,
														"src": "11595:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11595:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 539,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "11607:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 540,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "11611:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11607:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11595:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 543,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 538,
													"src": "11716:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 529,
												"id": 544,
												"nodeType": "Return",
												"src": "11709:8:0"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "10976:471:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 546,
												"src": "11465:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 546,
												"src": "11476:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 546,
												"src": "11487:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11487:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11464:50:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 546,
												"src": "11538:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11537:9:0"
									},
									"scope": 588,
									"src": "11452:272:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "12242:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 557,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "12263:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 558,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "12266:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12269:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 556,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															563,
															587
														],
														"referencedDeclaration": 587,
														"src": "12259:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12259:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 555,
												"id": 561,
												"nodeType": "Return",
												"src": "12252:44:0"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "11730:440:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 563,
												"src": "12188:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 563,
												"src": "12199:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12187:22:0"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 563,
												"src": "12233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12232:9:0"
									},
									"scope": 588,
									"src": "12175:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "12869:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 576,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "12887:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12892:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12887:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 579,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "12895:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12879:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12879:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "12879:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 582,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "12925:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 583,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "12929:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12925:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 574,
												"id": 585,
												"nodeType": "Return",
												"src": "12918:12:0"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "12309:460:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "12787:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "12798:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "12809:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12809:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12786:50:0"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "12860:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12859:9:0"
									},
									"scope": 588,
									"src": "12774:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 983,
							"src": "8361:4578:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "12941:189:0",
								"text": " @title Ownable\n @dev The Ownable contract has an owner address, and provides basic authorization control\n functions, this simplifies the implementation of \"user permissions\"."
							},
							"fullyImplemented": true,
							"id": 647,
							"linearizedBaseContracts": [
								647
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 591,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 647,
									"src": "13152:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 590,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13152:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 597,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 597,
												"src": "13205:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 597,
												"src": "13236:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13204:57:0"
									},
									"src": "13178:84:0"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "13404:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 601,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "13410:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 602,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "13418:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13418:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "13410:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "13410:18:0"
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "13267:113:0",
										"text": " @dev The Ownable constructor sets the original `owner` of the contract to the sender\n account."
									},
									"id": 607,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13394:2:0"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13404:0:0"
									},
									"scope": 647,
									"src": "13383:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "13535:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 611,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "13549:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13549:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 613,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "13563:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13549:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13541:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13541:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "13541:28:0"
											},
											{
												"id": 617,
												"nodeType": "PlaceholderStatement",
												"src": "13575:1:0"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "13438:73:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 619,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13532:2:0"
									},
									"src": "13514:67:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "13805:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 628,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "13819:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13839:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13831:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13831:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13831:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "13819:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "13811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13811:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "13811:31:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 637,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "13874:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 638,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "13881:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 636,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "13853:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13853:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "EmitStatement",
												"src": "13848:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 641,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "13896:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 642,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "13904:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13896:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "13896:16:0"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "13586:154:0",
										"text": " @dev Allows the current owner to transfer control of the contract to a newOwner.\n @param newOwner The address to transfer ownership to."
									},
									"functionSelector": "f2fde38b",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 625,
											"modifierName": {
												"argumentTypes": null,
												"id": 624,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 619,
												"src": "13788:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13788:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 646,
												"src": "13770:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13769:18:0"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13805:0:0"
									},
									"scope": 647,
									"src": "13743:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 983,
							"src": "13131:788:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 668,
							"linearizedBaseContracts": [
								668
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "13994:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "14006:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14006:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13993:25:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "14037:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 653,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14037:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14036:6:0"
									},
									"scope": 668,
									"src": "13976:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 667,
												"src": "14070:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 667,
												"src": "14084:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 667,
												"src": "14096:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14069:39:0"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 667,
												"src": "14127:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14127:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14126:6:0"
									},
									"scope": 668,
									"src": "14048:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 983,
							"src": "13953:182:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 690,
							"linearizedBaseContracts": [
								690
							],
							"name": "IERC721",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "14216:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "14230:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 677,
												"src": "14242:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14242:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14215:40:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14264:0:0"
									},
									"scope": 690,
									"src": "14194:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d0def521",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 684,
												"src": "14284:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 684,
												"src": "14296:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14296:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14283:27:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14319:0:0"
									},
									"scope": 690,
									"src": "14270:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14345:2:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "14370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14369:9:0"
									},
									"scope": 690,
									"src": "14325:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 983,
							"src": "14170:211:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 691,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 647,
										"src": "14406:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$647",
											"typeString": "contract Ownable"
										}
									},
									"id": 692,
									"nodeType": "InheritanceSpecifier",
									"src": "14406:7:0"
								}
							],
							"contractDependencies": [
								647
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 982,
							"linearizedBaseContracts": [
								982,
								647
							],
							"name": "NFT_Market",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 695,
									"libraryName": {
										"contractScope": null,
										"id": 693,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 588,
										"src": "14426:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$588",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14420:24:0",
									"typeName": {
										"id": 694,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "14439:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 698,
									"libraryName": {
										"contractScope": null,
										"id": 696,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 394,
										"src": "14455:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$394",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "14449:46:0",
									"typeName": {
										"contractScope": null,
										"id": 697,
										"name": "EnumerableSet.UintSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 299,
										"src": "14473:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
											"typeString": "struct EnumerableSet.UintSet"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "6605ff66",
									"id": 700,
									"mutability": "mutable",
									"name": "totalSales",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 982,
									"src": "14500:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 699,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14500:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 702,
									"mutability": "mutable",
									"name": "_trustedNftAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 982,
									"src": "14531:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 701,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14531:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 704,
									"mutability": "mutable",
									"name": "_maxToMint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 982,
									"src": "14571:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 703,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "14571:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 706,
									"mutability": "mutable",
									"name": "_mintFee",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 982,
									"src": "14600:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 705,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "14600:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 708,
									"mutability": "mutable",
									"name": "_maxPerTransaction",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 982,
									"src": "14627:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 707,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "14627:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 711,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 982,
									"src": "14665:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 709,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "14665:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307837324444624463333431424246633030466534463366343936393535333238343139363562463045",
										"id": 710,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14688:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x72DDbDc341BBFc00Fe4F3f49695532841965bF0E"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "14838:163:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 722,
														"name": "_trustedNftAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "14848:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 723,
														"name": "trustedNftAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "14869:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14848:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "14848:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 726,
														"name": "_maxToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "14896:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 727,
														"name": "maxToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "14909:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14896:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "14896:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 730,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "14928:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 731,
														"name": "mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "14939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14928:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "14928:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 734,
														"name": "_maxPerTransaction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "14956:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 735,
														"name": "maxPerTransaction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "14977:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14956:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "14956:38:0"
											}
										]
									},
									"documentation": null,
									"id": 739,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "trustedNftAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "14750:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "maxToMint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "14777:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14777:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "mintFee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "14793:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "maxPerTransaction",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "14807:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14807:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14749:81:0"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14838:0:0"
									},
									"scope": 982,
									"src": "14737:264:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "15070:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 744,
													"name": "_trustedNftAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 702,
													"src": "15087:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 743,
												"id": 745,
												"nodeType": "Return",
												"src": "15080:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "87b8368e",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedNftAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15037:2:0"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "15061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15060:9:0"
									},
									"scope": 982,
									"src": "15008:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "15169:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 752,
													"name": "_maxToMint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 704,
													"src": "15186:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 751,
												"id": 753,
												"nodeType": "Return",
												"src": "15179:17:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b7ed82b1",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxToMint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15139:2:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 755,
												"src": "15163:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15163:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15162:6:0"
									},
									"scope": 982,
									"src": "15118:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "15258:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 760,
													"name": "_mintFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 706,
													"src": "15275:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 759,
												"id": 761,
												"nodeType": "Return",
												"src": "15268:15:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "7a5caab3",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMintFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15228:2:0"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 763,
												"src": "15252:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15252:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15251:6:0"
									},
									"scope": 982,
									"src": "15209:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "15355:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 768,
													"name": "_maxPerTransaction",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 708,
													"src": "15372:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 767,
												"id": 769,
												"nodeType": "Return",
												"src": "15365:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "20234ac7",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaxPerTransaction",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15325:2:0"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 771,
												"src": "15349:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15348:6:0"
									},
									"scope": 982,
									"src": "15296:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "15445:116:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 777,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "15464:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15464:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 779,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "15478:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15464:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 781,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "15487:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15487:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 783,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "15501:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15487:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15464:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c792061646d696e206f72206f776e6572",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15508:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dae4a44146b0ef369a76fc75f0af6527fe708a8ea978459f8f4c3b981cf63f7d",
																"typeString": "literal_string \"Only admin or owner\""
															},
															"value": "Only admin or owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dae4a44146b0ef369a76fc75f0af6527fe708a8ea978459f8f4c3b981cf63f7d",
																"typeString": "literal_string \"Only admin or owner\""
															}
														],
														"id": 776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15455:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "15455:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 789,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "15540:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 790,
														"name": "_admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "15548:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15540:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "15540:14:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "704b6c02",
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "_admin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 794,
												"src": "15421:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15420:16:0"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15445:0:0"
									},
									"scope": 982,
									"src": "15403:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "15614:120:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 800,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "15633:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15633:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 802,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "15647:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15633:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 804,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "15656:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15656:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 806,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "15670:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15656:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15633:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c792061646d696e206f72206f776e6572",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15677:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dae4a44146b0ef369a76fc75f0af6527fe708a8ea978459f8f4c3b981cf63f7d",
																"typeString": "literal_string \"Only admin or owner\""
															},
															"value": "Only admin or owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dae4a44146b0ef369a76fc75f0af6527fe708a8ea978459f8f4c3b981cf63f7d",
																"typeString": "literal_string \"Only admin or owner\""
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15624:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15624:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "15624:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 812,
														"name": "_mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "15709:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 813,
														"name": "mintFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "15720:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15709:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "15709:18:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "05e2b0c3",
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMintNativeFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "mintFee",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 817,
												"src": "15593:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15592:14:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15614:0:0"
									},
									"scope": 982,
									"src": "15567:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "15789:128:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 823,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "15808:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15808:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 825,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "15822:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15808:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 827,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "15831:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "15831:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 829,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "15845:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15831:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15808:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c792061646d696e206f72206f776e6572",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15852:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dae4a44146b0ef369a76fc75f0af6527fe708a8ea978459f8f4c3b981cf63f7d",
																"typeString": "literal_string \"Only admin or owner\""
															},
															"value": "Only admin or owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dae4a44146b0ef369a76fc75f0af6527fe708a8ea978459f8f4c3b981cf63f7d",
																"typeString": "literal_string \"Only admin or owner\""
															}
														],
														"id": 822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15799:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "15799:75:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 835,
														"name": "_maxPerTransaction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "15885:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 836,
														"name": "_max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "15906:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15885:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "15885:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ccfdd2f8",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMaxPerTransaction",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "_max",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 840,
												"src": "15770:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15769:11:0"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15789:0:0"
									},
									"scope": 982,
									"src": "15740:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "485a68a3",
									"id": 843,
									"mutability": "mutable",
									"name": "maxFree",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 982,
									"src": "15987:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 841,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "15987:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 842,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16009:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "16133:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 849,
																		"name": "getTrustedNftAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "16156:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16156:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 848,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "16148:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$690_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16148:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$690",
																"typeString": "contract IERC721"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "16148:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16148:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 847,
												"id": 854,
												"nodeType": "Return",
												"src": "16141:52:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16101:2:0"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 856,
												"src": "16125:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16124:9:0"
									},
									"scope": 982,
									"src": "16081:119:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "16269:129:0",
										"statements": [
											{
												"assignments": [
													864
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"mutability": "mutable",
														"name": "totalMinted",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 879,
														"src": "16277:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 871,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 866,
																		"name": "getTrustedNftAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "16307:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16307:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 865,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "16299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$690_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16299:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$690",
																"typeString": "contract IERC721"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "16299:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16299:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16277:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 874,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "16375:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 872,
																"name": "totalMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "16359:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 421,
															"src": "16359:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16359:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 876,
														"name": "maxFree",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "16384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16359:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 862,
												"id": 878,
												"nodeType": "Return",
												"src": "16352:39:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e4ddd04a",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canMintFree",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "count",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 880,
												"src": "16227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16226:15:0"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 880,
												"src": "16263:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16263:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16262:6:0"
									},
									"scope": 982,
									"src": "16206:192:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "16455:444:0",
										"statements": [
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "totalMinted",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 937,
														"src": "16465:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16465:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 888,
																	"name": "_trustedNftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "16495:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 887,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "16487:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$690_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16487:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$690",
																"typeString": "contract IERC721"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "16487:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16487:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16465:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16633:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 894,
																		"name": "totalMinted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "16617:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 421,
																	"src": "16617:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16617:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 898,
																"name": "_maxToMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "16639:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16617:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d617820737570706c792072656163686564",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16651:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																"typeString": "literal_string \"Max supply reached\""
															},
															"value": "Max supply reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf40cb9708e1320ee04bc59cb2f8b4ce47ba0c93638609957810c412abce51a7",
																"typeString": "literal_string \"Max supply reached\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16608:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "16608:64:0"
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "_owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 937,
														"src": "16683:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 903,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16683:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 909,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "16724:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16716:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 907,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "16716:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16716:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16708:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16708:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16683:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 914,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "16749:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16749:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 916,
																"name": "_mintFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "16762:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16749:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e742066656573",
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16772:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd13262e5d8b6b82ff3765a1de4eb2bc3b8436989067cbfdd63f312b915665dd",
																"typeString": "literal_string \"Insufficient fees\""
															},
															"value": "Insufficient fees"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd13262e5d8b6b82ff3765a1de4eb2bc3b8436989067cbfdd63f312b915665dd",
																"typeString": "literal_string \"Insufficient fees\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "16741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16741:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "16741:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 924,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "16818:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16818:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 921,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "16802:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16802:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16802:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "16802:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 932,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "16872:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16872:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 934,
															"name": "ipfsId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "16884:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 929,
																	"name": "_trustedNftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "16847:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 928,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "16839:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$690_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16839:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$690",
																"typeString": "contract IERC721"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 684,
														"src": "16839:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory) external"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16839:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "16839:52:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d85d3d27",
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "ipfsId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 938,
												"src": "16418:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 881,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16418:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16417:22:0"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16455:0:0"
									},
									"scope": 982,
									"src": "16404:495:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 948,
									"name": "ERC721Received",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"indexed": false,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "16926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "16944:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "16958:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "16975:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 945,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16975:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16925:61:0"
									},
									"src": "16905:82:0"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "17151:169:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 962,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "17169:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17169:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 964,
																	"name": "getTrustedNftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "17183:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17183:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17169:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17161:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "17161:45:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 970,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "17236:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 971,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "17246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 972,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "17252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 973,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "17261:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 969,
														"name": "ERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "17221:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17221:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "EmitStatement",
												"src": "17216:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 976,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -28,
															"src": "17283:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NFT_Market_$982",
																"typeString": "contract NFT_Market"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 981,
														"src": "17283:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "17283:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 960,
												"id": 979,
												"nodeType": "Return",
												"src": "17276:37:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "150b7a02",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 981,
												"src": "17060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 981,
												"src": "17078:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 981,
												"src": "17092:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 981,
												"src": "17109:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17109:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17059:68:0"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 981,
												"src": "17143:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 958,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "17143:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17142:8:0"
									},
									"scope": 982,
									"src": "17034:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 983,
							"src": "14383:2940:0"
						}
					],
					"src": "0:17324:0"
				},
				"id": 0
			}
		}
	}
}